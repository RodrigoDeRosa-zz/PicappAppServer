#!/usr/bin/env python3

import os
import requests
import unittest

def main():
    # Give access to bash files
    os.popen('chmod +x run').read()
    os.popen('chmod +x stop').read()
    # Run servers
    p = os.popen('./run').read()
    # Run test
    tester = IntegrationTestCase()
    # tester.test_login_happy_case()
    # tester.test_signup_happy_case()
    tester.assertTrue(True)
    # Kill servers
    os.popen('./stop').read()

class IntegrationTestCase(unittest.TestCase):

    def setUp(self):
        self.success_codes = [200, 201, 204]

    def test_login_happy_case(self):
        uri = 'https://picapp-app-server.herokuapp.com/users/login'
        body = {
            'username': 'steel-do',
            'password': 'some-password'
        }
        # Get response
        response = requests.post(uri,
                                 data=json.dumps(body),
                                 headers={'Content-Type': 'Application/json'})
        # Handle error codes
        if response.status_code not in self.success_codes:
            self.fail("Fail! Received code {} with message {}".format(response.status_code, response.json()['message']))
        # Get data
        self.assertEqual('steel-do', response.json()['username'])
        self.assertNotNull(response.json()['userid'])
        self.assertNotNull(response.json()['token'])
        self.assertNotNull(response.json()['token']['token'])
        self.assertTrue(response.json()['token']['expiresAt'] > time.time())

    def test_signup_happy_case(self):
        uri = 'https://picapp-app-server.herokuapp.com/users/signup'
        body = {
            'username': 'steel-do',
            'password': 'some-password'
        }
        # Get response
        response = requests.post(uri,
                                 data=json.dumps(body),
                                 headers={'Content-Type': 'Application/json'})
        # Handle errors
        if response.status_code not in self.success_codes:
            self.fail("Fail! Received code {} with message {}".format(response.status_code, response.json()['message']))
        # Check data
        self.assertEqual('steel-do', response.json()['username'])
        self.assertEqual('some-password', response.json()['password'])


main()
